* MethodTables:
[[testcase]group2.DerivedX2`1]
 - Foo|Void(Int32,!0)|20: [testcase]group2.DerivedX2`1 -> System.Void group2.DerivedX2`1::Foo(System.Int32,T)
   - [testcase]group2.Base`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Base`2::Foo(T,P)
   - [testcase]group2.Inf`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Inf`2::Foo(T,P)
   - [testcase]group2.Derived`2<!(group2.DerivedX2`1)0,Int32> -> System.Void group2.Derived`2::Foo(P,T)
   - [testcase]group2.DerivedX2`1 -> System.Void group2.DerivedX2`1::Foo(System.Int32,T)

 - Foo|Void(Int32,Single)|20: [testcase]group2.Derived`2<!(group2.DerivedX2`1)0,Int32> -> System.Void group2.Derived`2::Foo(System.Int32,System.Single)
   - [testcase]group2.Base`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Base`2::Foo(System.Int32,System.Single)
   - [testcase]group2.Derived`2<!(group2.DerivedX2`1)0,Int32> -> System.Void group2.Derived`2::Foo(System.Int32,System.Single)

[[testcase]group2.Derived`2<!(group2.DerivedX2`1)0,Int32>]
 - Foo|Void(Int32,!0)|20: [testcase]group2.Derived`2<!(group2.DerivedX2`1)0,Int32> -> System.Void group2.Derived`2::Foo(P,T)
   - [testcase]group2.Base`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Base`2::Foo(T,P)
   - [testcase]group2.Inf`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Inf`2::Foo(T,P)
   - [testcase]group2.Derived`2<!(group2.DerivedX2`1)0,Int32> -> System.Void group2.Derived`2::Foo(P,T)

 - Foo|Void(Int32,Single)|20: [testcase]group2.Derived`2<!(group2.DerivedX2`1)0,Int32> -> System.Void group2.Derived`2::Foo(System.Int32,System.Single)
   - [testcase]group2.Base`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Base`2::Foo(System.Int32,System.Single)
   - [testcase]group2.Derived`2<!(group2.DerivedX2`1)0,Int32> -> System.Void group2.Derived`2::Foo(System.Int32,System.Single)

[[testcase]group2.Base`2<Int32,!(group2.DerivedX2`1)0>]
 - Foo|Void(Int32,!0)|20: [testcase]group2.Base`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Base`2::Foo(T,P)
   - [testcase]group2.Base`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Base`2::Foo(T,P)
   - [testcase]group2.Inf`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Inf`2::Foo(T,P)

[Object]

[[testcase]group2.Inf`2<Int32,!(group2.DerivedX2`1)0>]
 - Foo|Void(Int32,!0)|20: null
   - [testcase]group2.Inf`2<Int32,!(group2.DerivedX2`1)0> -> System.Void group2.Inf`2::Foo(T,P)

* Types:
[class [testcase]testcase.GenOverride4] NotPublic AutoLayout Abstract Sealed AnsiClass BeforeFieldInit 
 - Base: Object
 - Methods:
   - Entry|Void()|0|96, Entry|Void()|0, Public Static HideBySig Managed None

[class Object] Public AutoLayout Serializable AnsiClass BeforeFieldInit 
 - DerivedTypes:
   - [testcase]testcase.GenOverride4
   - [testcase]group2.Base`2<Int32,Single>
   - [testcase]group2.Derived`2<Single,Int32>
   - [testcase]group2.DerivedX2`1<Single>
 - Methods:
   - .ctor|Void()|20|1886, .ctor|Void(Object)|20, Public HideBySig SpecialName RTSpecialName Managed None

[class [testcase]group2.DerivedX2`1<Single>] NotPublic AutoLayout AnsiClass BeforeFieldInit 
 - Instantiated
 - Base: [testcase]group2.Derived`2<Single,Int32>
 - Fields:
   - fld|!0|1, fld|Single, Private 
 - Methods:
   - .ctor|Void()|20|1886, .ctor|Void([testcase]group2.DerivedX2`1<Single>)|20, Public HideBySig SpecialName RTSpecialName Managed None
   - Foo|Void(Int32,!0)|20|C6, Foo|Void([testcase]group2.DerivedX2`1<Single>,Int32,Single)|20, Public Virtual HideBySig Managed None
 - VTable:
   - [Object]
   - [[testcase]group2.Base`2<Int32,Single>]
     - System.Void group2.Base`2::Foo(T,P): [testcase]group2.DerivedX2`1<Single> -> System.Void group2.DerivedX2`1::Foo(System.Int32,T)
     - System.Void group2.Base`2::Foo(System.Int32,System.Single): [testcase]group2.Derived`2<Single,Int32> -> System.Void group2.Derived`2::Foo(System.Int32,System.Single)
   - [[testcase]group2.Inf`2<Int32,Single>]
     - System.Void group2.Inf`2::Foo(T,P): [testcase]group2.DerivedX2`1<Single> -> System.Void group2.DerivedX2`1::Foo(System.Int32,T)
   - [[testcase]group2.Derived`2<Single,Int32>]
     - System.Void group2.Derived`2::Foo(P,T): [testcase]group2.DerivedX2`1<Single> -> System.Void group2.DerivedX2`1::Foo(System.Int32,T)
   - [[testcase]group2.DerivedX2`1<Single>]

[class [testcase]group2.Derived`2<Single,Int32>] NotPublic AutoLayout AnsiClass BeforeFieldInit 
 - Base: [testcase]group2.Base`2<Int32,Single>
 - DerivedTypes:
   - [testcase]group2.DerivedX2`1<Single>
 - Methods:
   - .ctor|Void()|20|1886, .ctor|Void([testcase]group2.Derived`2<Single,Int32>)|20, Public HideBySig SpecialName RTSpecialName Managed None

[class [testcase]group2.Base`2<Int32,Single>] NotPublic AutoLayout AnsiClass BeforeFieldInit 
 - Base: Object
 - Interfaces:
   - [testcase]group2.Inf`2<Int32,Single>
 - DerivedTypes:
   - [testcase]group2.Derived`2<Single,Int32>
   - [testcase]group2.DerivedX2`1<Single>
 - Methods:
   - .ctor|Void()|20|1886, .ctor|Void([testcase]group2.Base`2<Int32,Single>)|20, Public HideBySig SpecialName RTSpecialName Managed None

[class [testcase]group2.Inf`2<Int32,Single>] NotPublic AutoLayout Interface Abstract AnsiClass 
 - DerivedTypes:
   - [testcase]group2.Base`2<Int32,Single>
   - [testcase]group2.Derived`2<Single,Int32>
   - [testcase]group2.DerivedX2`1<Single>
 - Methods:
   - Foo|Void(!0,!1)|20|5C6, Foo|Void([testcase]group2.Inf`2<Int32,Single>,Int32,Single)|20 = 0, Public Virtual HideBySig NewSlot Abstract Managed None
     - [testcase]group2.DerivedX2`1<Single> -> Foo|Void(Int32,!0)|20|C6, Foo|Void([testcase]group2.DerivedX2`1<Single>,Int32,Single)|20

[class [testcase]group2.Inf`2<Single,Int32>] NotPublic AutoLayout Interface Abstract AnsiClass 
 - Methods:
   - Foo|Void(!0,!1)|20|5C6, Foo|Void([testcase]group2.Inf`2<Single,Int32>,Single,Int32)|20 = 0, Public Virtual HideBySig NewSlot Abstract Managed None

