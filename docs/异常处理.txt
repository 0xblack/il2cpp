- 异常处理信息的顺序就是生成 try-catch 的嵌套顺序
- 靠上的在内层, 靠下的在外层
- 对于 leave 指令, 需要从上往下搜索包含该指令的 finally 区间
  并生成保存目标并跳转到 finally 块的代码

- filter:
try
{
	...
}
catch (il2cppException& ex)
{
	lastException = ex.Exception;
	goto FILTER;
}
...
FILTER:
...
// endfilter
if (tmp_0 == 0)
	// goto outer block or rethrow
// catch
...

- try-finally:
cls_n_System_Exception *currException = nullptr;
try
{
	// try block
	
	// leave 256 注册到包含当前指令的 finally 块内
	leaveTarget = 1;
	goto LB_FINALLY_1;
}
catch (il2cppException &ex)
{
	currException = ex.ManagedException;
}
LB_FINALLY_1:
// finally block

// endfinally
if (currException)
	IL2CPP_THROW(il2cppException(currException));
switch (leaveTarget)
{
	case 1: goto LB_256;
	case 2: goto LB_FINALLY_2;
	...
}

- try-fault:
try
{
	// try block
}
catch (il2cppException &ex)
{
	// fault block
	IL2CPP_THROW(ex);
}
